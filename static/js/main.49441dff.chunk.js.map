{"version":3,"sources":["components/Wheel.js","components/SpinWheel.js","App.js","reportWebVitals.js","index.js"],"names":["Wheel","props","state","selectedItem","nbTurn","spinDuration","selectItem","bind","this","Math","floor","random","items","length","onSelectItem","setState","wheelVars","className","style","onClick","map","item","index","Avatar","src","width","height","color","Typography","variant","charAt","toUpperCase","React","Component","SpinWheel","params","queryString","parse","location","search","members","u","split","parseInt","newName","backDropOpen","handleToggle","handleAdd","handleDelete","handleTextChange","handleKeyPress","onWheelSelect","openBackdrop","closeBackdrop","name","event","target","value","key","clearTimeout","timeoutId","winner","setTimeout","disableAddButton","inputError","undefined","backDrop","Backdrop","zIndex","backdropFilter","WebkitBackdropFilter","open","left","component","marginTop","padding","Container","maxWidth","Grid","container","spacing","lg","md","xs","Card","CardContent","List","Object","keys","ListItem","button","ListItemAvatar","ListItemText","primary","ListItemSecondaryAction","Switch","edge","checked","onChange","IconButton","aria-label","TextField","id","placeholder","onKeyPress","error","helperText","autoComplete","disabled","filter","withRouter","App","prefersDarkMode","useMediaQuery","theme","useMemo","createMuiTheme","palette","type","secondary","main","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49441dff.chunk.js","sourcesContent":["import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\nimport './wheel.css';\n\n// inspired by https://github.com/hadriengerard/spinning-wheel-game-react\nexport default class Wheel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedItem: null,\n      nbTurn: 0,\n      spinDuration: props.spinDuration ?? 10,\n    };\n    this.selectItem = this.selectItem.bind(this);\n  }\n\n  selectItem() {\n    const { nbTurn, spinDuration } = this.state;\n    const selectedItem = Math.floor(Math.random() * this.props.items.length);\n\n    if (this.props.onSelectItem) {\n      this.props.onSelectItem(this.props.items[selectedItem], spinDuration);\n    }\n    this.setState({ \n      selectedItem,\n      nbTurn: nbTurn + 10,\n    });\n  }\n\n  render() {\n    const { selectedItem, nbTurn, spinDuration } = this.state;\n    const { items } = this.props;\n    \n    const wheelVars = {\n      '--nb-item': items.length,\n      '--selected-item': selectedItem,\n      '--nb-turn': nbTurn,\n      '--spinning-duration': `${spinDuration}s`,\n    };\n\n    const spinning = 'spinning';\n\n    return (\n      <div className=\"wheel-container\">\n        <div className={`wheel ${spinning}`} style={wheelVars} onClick={this.selectItem}>\n          {items.map((item, index) => (\n            <div className=\"wheel-item\" key={index} style={{ '--item-nb': index }}>\n              <Avatar\n                src={`https://cinco.linkedin.biz/api/raw/picture/${item}`}\n                style={{width: 150, height:150, color: '#ffffff'}}\n              >\n                <Typography variant=\"h3\">\n                  {item.charAt(0).toUpperCase()}\n                </Typography>\n              </Avatar>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport {\n  Avatar,\n  Backdrop,\n  Card,\n  CardContent,\n  Container,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  Switch,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Wheel from './Wheel';\n\nclass SpinWheel extends React.Component{\n  constructor(props) {\n    super(props);\n    let params = queryString.parse(props.location.search);\n    let members = {};\n    if (params.u) {\n      for (let name of params.u.split(',')) {\n        members[name] = true;\n      }\n    }\n    if (params.spinDuration) {\n      this.spinDuration = parseInt(params.spinDuration);\n    }\n    this.state = {\n      members,\n      newName: '',\n      backDropOpen: false,\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n\n    this.onWheelSelect = this.onWheelSelect.bind(this);\n    this.openBackdrop = this.openBackdrop.bind(this);\n    this.closeBackdrop = this.closeBackdrop.bind(this);\n\n  }\n\n  // wheel spin duration default 10s\n  spinDuration = 10;\n  \n  handleToggle(name) {\n    const { members } = this.state;\n    members[name] = !(members[name]);\n    this.setState({ members });\n  };\n\n  handleAdd() {\n    const { members, newName } = this.state;\n    if (newName) {\n      members[newName] = true;\n      this.setState({\n        members,\n        newName: ''\n      });\n    }\n  }\n\n  handleDelete(name) {\n    const { members } = this.state;\n    delete members[name];\n    this.setState({ members });\n  }\n\n  handleTextChange(event) {\n    this.setState({newName: event.target.value})\n  }\n\n  handleKeyPress(event) {\n    if(event.key === 'Enter'){\n      this.handleAdd();\n    }\n  }\n\n  onWheelSelect(selectedItem, spinDuration) {\n    clearTimeout(this.timeoutId);\n    this.setState({ winner: selectedItem });\n    this.timeoutId = setTimeout(this.openBackdrop, (spinDuration + 1) * 1000);\n  }\n\n  openBackdrop() {\n    this.setState({ backDropOpen: true });\n  }\n\n  closeBackdrop() {\n    this.setState({ backDropOpen: false });\n  }\n  \n  render() {\n    const { members, newName, backDropOpen, winner } = this.state;\n    let disableAddButton = false;\n    let inputError = undefined;\n    if (!newName) {\n      disableAddButton = true;\n    } else if (members[newName] !== undefined) {\n      disableAddButton = true;\n      inputError = 'Already exist';\n    }\n    const backDrop = winner ? \n      <Backdrop\n        style={{zIndex: 2, color: '#ffffff', backdropFilter: 'blur(10px)', WebkitBackdropFilter: 'blur(10px)'}}\n        open={backDropOpen}\n        onClick={this.closeBackdrop}\n      >\n      <div>\n        <Avatar src={`https://cinco.linkedin.biz/api/raw/picture/${winner}`}\n          style={{width: 400, height:400, left: 'calc(50% - 200px)', color: '#ffffff'}}\n        >\n          <Typography variant=\"h1\">\n            {winner?.charAt(0).toUpperCase()}\n          </Typography>\n        </Avatar>\n        <Typography variant=\"h1\" component=\"h2\" style={{marginTop: 100}}>\n          Congratulations, {winner}!\n        </Typography>\n      </div>\n    </Backdrop> : <div></div>;\n\n    return (\n      <div style={{padding: '50px'}}>\n        <Container maxWidth=\"lg\">\n          <Grid\n            container\n            spacing={10}\n          >\n            {/* member selector */}\n            <Grid\n              item\n              lg={4}\n              md={6}\n              xs={12}\n            >\n              <Card>\n                <CardContent>\n                  <List component=\"nav\">\n                    {Object.keys(members).map(name => (\n                      <ListItem button key={name} onClick={() => this.handleToggle(name)}>\n                        <ListItemAvatar>\n                          <Avatar style={{color: '#ffffff'}} src={`https://cinco.linkedin.biz/api/raw/picture/${name}`}>\n                            {name.charAt(0).toUpperCase()}\n                          </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText primary={name} />\n                        <ListItemSecondaryAction>\n                          <Switch\n                            edge=\"end\"\n                            checked={members[name]}\n                            onChange={() => this.handleToggle(name)}\n                          />\n                          <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => this.handleDelete(name)}>\n                            <DeleteIcon />\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    ))}\n                    <ListItem>\n                      <ListItemAvatar>\n                        <Avatar style={{color: '#ffffff'}}>{newName.charAt(0).toUpperCase()}</Avatar>\n                      </ListItemAvatar>\n                      <TextField id=\"standard-basic\"\n                        placeholder=\"Add more\"\n                        onChange={this.handleTextChange}\n                        value={newName}\n                        onKeyPress={this.handleKeyPress}\n                        error={inputError !== undefined}\n                        helperText={inputError}\n                        autoComplete=\"off\"\n                      />\n                      <ListItemSecondaryAction>\n                        <IconButton edge=\"end\" aria-label=\"delete\"\n                          onClick={() => this.handleAdd()}\n                          disabled={disableAddButton}\n                        >\n                          <AddIcon />\n                        </IconButton>\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                  </List>\n                </CardContent>\n              </Card>\n            </Grid>\n            {/* spin wheel */}\n            <Grid\n              item\n              lg={8}\n              md={6}\n              xs={12}\n            >\n              <Wheel\n                items={Object.keys(members).filter(name => members[name])}\n                spinDuration={this.spinDuration}\n                onSelectItem={this.onWheelSelect}\n              />\n              {backDrop}\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SpinWheel);","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport SpinWheel from './components/SpinWheel';\nimport './App.css';\n\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          secondary: {\n            main: prefersDarkMode? '#f48fb1': '#f50057',\n          },\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <Router>\n          <SpinWheel />\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}